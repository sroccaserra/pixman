pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
-- ~pixman~
-- sroccaserra

function _init()
    music(0)
    world:init()
    pixman:init()
end

function _update()
    world:update()
    pixman:update(world)
end

function _draw()
    world:draw()
    pixman:draw()
end

-->8
-- world logic

world = {
    width = 128,
    height = 128,
    layer_x_position = 0,
    layer_y_position = 0,
    has_gravity = false,
    score = 0,
    coins = {}
}

function world:init()
    add(self.coins, coin_prototype:new(81, 39))
    for x = 45, 81, 9 do
        for y = 60, 110, 10 do
            add(self.coins, coin_prototype:new(x, y))
        end
    end
end

function world:update()
    for coin in all(self.coins) do
        if coin.visible and does_pixman_touch_the_coin(coin) then
            self.has_gravity = true
            self.score += 1
            coin:hide()
        end
        coin:update(self)
    end

    self:update_background_layer_position()
end

function does_pixman_touch_the_coin(coin)
    return abs(pixman.x - coin.x) < 8 and abs(pixman.y - coin.y) < 8
end

function world:update_background_layer_position()
    self.layer_x_position += 1
    self.layer_x_position %= 128
    self.layer_y_position += 1
    self.layer_y_position %= 128
end

function world:draw()
    camera(self.layer_x_position, self.layer_y_position)
    map(0, 0, 0, 0, 16, 16)
    camera(self.layer_x_position-128, self.layer_y_position-128)
    map(0, 0, 0, 0, 16, 16)
    camera(self.layer_x_position, self.layer_y_position-128)
    map(0, 0, 0, 0, 16, 16)
    camera(self.layer_x_position-128, self.layer_y_position)
    map(0, 0, 0, 0, 16, 16)
    camera()
    map(0, 16, 0, 0, 16, 16)

    for coin in all(self.coins) do
        coin:draw()
    end
    print('score: ' .. self.score, 11, 11, 1)
    print('score: ' .. self.score, 10, 10, 12)
end

-->8
-- animation prototype

animation_prototype = {
    ticks_by_frames = 3
}

function animation_prototype:new(frames, h_flip, v_flip)
    local o = {
        frames = frames,
        h_flip = h_flip,
        v_flip = v_flip,
        n_frame = 1,
        tick_count = 0
    }
    setmetatable(o, self)
    self.__index = self
    return o
end

function animation_prototype:tick()
    self.tick_count += 1
    if self.tick_count % self.ticks_by_frames == 0 then
        self:advance_frame()
    end
end

function animation_prototype:advance_frame()
    self.n_frame += 1
    if self.n_frame > #self.frames then
        self.n_frame = 1
    end
end

function animation_prototype:sprite_number()
    return self.frames[self.n_frame]
end

-->8
-- pixman

pixman = {
    animations = {
        up = animation_prototype:new({23, 24, 25, 24}, false, true),
        down = animation_prototype:new({23, 24, 25, 24}),
        left = animation_prototype:new({7, 8, 9, 8}, true),
        right = animation_prototype:new({7, 8, 9, 8})
    },
    speed = 2,
}

function pixman:init()
    self.x = 40
    self.y = 39
    self.dx = 0
    self.dy = 0
    local direction = 'right'
    self.direction = direction
    self.animation = self.animations[direction]
end

function pixman:update(world)
    self:update_pos(world)
    self:update_sprite()
end

function pixman:update_pos(world)
    self.dx = 0
    self.dy = 0
    if btn(0) then
        self.direction = 'left'
        self.dx = -self.speed
    elseif btn(1) then
        self.direction = 'right'
        self.dx = self.speed
    elseif btn(2) then
        self.direction = 'up'
        self.dy = -self.speed
    elseif btn(3) then
        self.direction = 'down'
        self.dy = self.speed
    end
    self.x += self.dx
    self.y += self.dy
    self:clamp(world)
end

function pixman:clamp(world)
    if self.x >= world.width then
        self.x = 0
    end
    if self.x < 0 then
        self.x = world.width
    end
    if self.y >= world.height then
        self.y = 0
    end
    if self.y < 0 then
        self.y = world.height
    end
end

function pixman:update_sprite()
    if self.dx ~= 0 or self.dy ~= 0 then
        self.animation = self.animations[self.direction]
        self.animation:tick()
    end
end

function pixman:draw()
    local h_flip = self.animation.h_flip
    local v_flip = self.animation.v_flip
    local sprite_number = self.animation:sprite_number()
    pal(12, 1)
    pal(9, 1)
    spr(sprite_number, self.x+1, self.y+1, 1, 1, h_flip, v_flip)
    pal()
    spr(sprite_number, self.x, self.y, 1, 1, h_flip, v_flip)
end

-->8
-- coin prototpye

coin_prototype = {
    v_inc = 0.5
}

function coin_prototype:new(x, y)
    local o = {
        x = x,
        y = y,
        v_x = 0,
        v_y = 0,
        visible = true,
        animation = animation_prototype:new({10, 11, 12, 13})
    }
    setmetatable(o, self)
    self.__index = self
    return o
end

function coin_prototype:update(world)
    if world.has_gravity then
        self:update_position()
        self:update_velocity()
    end
    self.animation:tick()
end

function coin_prototype:update_position()
    self.x += self.v_x
    self.y += self.v_y
end

function coin_prototype:get_gravity_direction()
    local direction_x = pixman.x - self.x
    local direction_y = pixman.y - self.y
    local length = norm(direction_x, direction_y)
    direction_x /= length
    direction_y /= length
    return direction_x, direction_y
end

function coin_prototype:update_velocity()
    local g_direction_x, g_direction_y = self:get_gravity_direction()
    self.v_x += self.v_inc*g_direction_x
    self.v_y += self.v_inc*g_direction_y
end

function coin_prototype:draw()
    if not self.visible then
        return
    end
    local sprite_number = self.animation:sprite_number()
    pal(4, 1)
    pal(9, 1)
    pal(10, 1)
    spr(sprite_number, self.x+1, self.y+1)
    pal()
    spr(sprite_number, self.x, self.y)
end

function coin_prototype:hide()
    if self.visible then
        self.visible = false
        sfx(3)
    end
end

-->8
-- math

function norm (x, y)
    return sqrt(x^2 + y^2)
end

__gfx__
000000000000000000cc00000000000000000000000000000000000000999000009990000099900000aaa000000a0000000a0000000900000000000000000000
000000000000000000cc1000000000000000000000000000000000000999000009999900099999000a9a940000a9400000090000009740000000000000000000
00700700000000000001100000000000000000000000000000000000999000009999000099999990a9a9494000aa4000000a0000097974000000000000000000
000770000cccccc000cc00990000cc00cc0ccc0000ccccc00cc0cc00990000009900000099999990a9a9494000aa4000000a0000097974000000000000000000
00077000cccccccc00cc1009900cc110ccccccc00cccccc10cccccc0ccc00000cccc0000ccccccc0a9a9494000aa4000000a0000097474000000000000000000
00700700cc1111cc10cc100099cc1100cc1c1cc10cc111c10ccc1cc10ccc00000ccccc000ccccc000a94940000a9400000090000009740000000000000000000
00000000cc1000cc10cc100009911000cc1c1cc10cc100c10cc11cc100ccc00000ccc00000ccc000004440000004000000040000000400000000000000000000
00000000cc1000cc10cc100099cc0000cc1c1cc10cc100c10cc10cc1000000000000000000000000000000000000000000000000000000000000000000000000
00000000cccccccc10cc1009911cc000cc1c1cc10cccccc10cc10cc100c9900000c9900000c99000000000000000000000000000000000000000000000000000
00000000cc1cccc110cc10991100cc00cc1c1cc100ccc1c10cc10cc10cc999000cc999000cc99900000000000000000000000000000000000000000000000000
00000000cc1111110001100110000110011010110001110100110011ccc09990ccc09990ccc99990000000000000000000000000000000000000000000000000
00000000cc1000000000000000000000000000000000000000000000cc000990ccc09990ccc99990000000000000000000000000000000000000000000000000
00000000cc1000000000000000000000000000000000000000000000c0000090cc000990ccc99990000000000000000000000000000000000000000000000000
00000000cc1000000000000000000000000000000000000000000000000000000c0009000cc99900000000000000000000000000000000000000000000000000
00000000011000000000000000000000000000000000000000000000000000000000000000c99000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555555555555555555555555555555555555555555555000000000000000000000000000000000000000000000000000000000000000000000000
000000005555555555555555555555555555555555111555555dd5d5000000000000000000000000000000000000000000000000000000000000000000000000
000000005555555555511155555111155555555511555d5555d55551000000000000000000000000000000000000000000000000000000000000000000000000
0000000055555555551155d55515555d555555555555555555d55551000000000000000000000000000000000000000000000000000000000000000000000000
0000000055555555551555d55515555d5551111155555d5555511111000000000000000000000000000000000000000000000000000000000000000000000000
0000000055555555551555d5555dd5d5111ddddddd555d5555555555000000000000000000000000000000000000000000000000000000000000000000000000
0000000055555555555ddd5555555555ddd5555555ddd55555555555000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555555555555555555555555555555555555555555555000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0001010101010100000000000000000000010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2123212121212121212221212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212122212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2521262121212121262121212122212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2122212121232121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212621212123212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121262121212123212122212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121222121212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212122212121212121262100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212321212121212121222121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212121212621212121212121212400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2121212221212121212121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2521212121212121232121212121212100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000010203040506000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000111213141516000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
011000000c0432820535205272053061327205302052d2050c0432d0050c0033420530613322052d2050c0030c0430c0030c00304003306130400304003040030c04304003040030400330613040030c04304003
011000000a110030240314308055011360a03303124011360a017031120a0230a11408044080340a1250a0370a114030250315208023011540a0420301306144080160a1340a0570a1230304408042031130a045
011000000d5420f5420f0500c5400c5410c05018050185422554200500255402754100500005002e540005002e5422e542005022a54200500005002c5422c5422c54500500005000050000500005000050000500
00060000183661c366183361c336183001c300183001c300183001c300183001c300183001c300183001c30018c0018c0018b0018b0018b0018b001ab001cb001db0018a0018a0018a0018900189001880018800
0110000000702007000c7000c70000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700
__music__
02 00010244

